stages:
  - debug
  - lint
  - test
  - build
  - deploy
  - review
  - dast
  - staging
  - canary
  - production
  - incremental rollout 10%
  - incremental rollout 25%
  - incremental rollout 50%
  - incremental rollout 100%
  - performance
  - cleanup

build:
  stage: build
  image: node:18
  script:
    - yarn install
    - yarn build
  artifacts:
    paths:
      - dist

publish:
  image: node:latest
  stage: deploy
  allow_failure: true
  before_script:
    - git checkout $CI_COMMIT_BRANCH
    - git config user.name metahkg-bot
    - git config user.email bot@metahkg.org
    - git remote set-url origin https://wcyat:$gitlab_token@gitlab.com/$CI_PROJECT_PATH
  script:
    - yarn install
    - yarn lint
    - yarn build
    - git add -A
    - git commit -a -m "build and lint"
    - git push origin $CI_COMMIT_BRANCH
    # If no .npmrc is included in the repo, generate a temporary one that is configured to publish to GitLab's NPM registry
    - npm set registry https://registry.npmjs.com/:authToken=$npm_token

    # Extract a few values from package.json
    - if [ "$CI_COMMIT_BRANCH" = "dev" ]; then suffix="-dev"; else suffix=""; fi;
    - NPM_PACKAGE_ORIGINAL_VERSION=$(node -p "require('./package.json').version")
    - NPM_PACKAGE_VERSION=$(node -p "require('./package.json').version + \"${suffix}\"")
    - sed -i "s/${NPM_PACKAGE_ORIGINAL_VERSION}/${NPM_PACKAGE_VERSION}/" package.json

    # Compare the version in package.json to all published versions.
    # If the package.json version has not yet been published, run `npm publish`.
    - |
      if [ "$CI_COMMIT_BRANCH" = "dev" ]; then npm publish --tag dev; else npm publish; fi;
  rules:
    - if: $CI_COMMIT_AUTHOR != "metahkg-bot <bot@metahkg.org>"

sast:
  stage: test

include:
  - template: Auto-DevOps.gitlab-ci.yml
